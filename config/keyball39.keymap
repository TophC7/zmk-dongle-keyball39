#define DEFAULT 0
#define SYS     1
#define FUNC    2
#define MOUSE   3
#define SCROLL  4
#define SNIPE   5
#define PLAIN   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>

&nice_view_spi { cs-gpios = <&pro_micro 1 GPIO_ACTIVE_HIGH>; };

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph

    behaviors {
        // Tap dances for shift keys - shift, alt, compose
        td_lshift: tap_dance_lshift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LSHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp LALT>, <&kp K_APP>;
        };

        td_rshift: tap_dance_rshift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_RSHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RSHFT>, <&kp RALT>, <&kp K_APP>;
        };

        // Tap dance for GUI - gui, SYS layer, FUNC layer
        td_gui: tap_dance_gui {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_GUI";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LGUI>, <&mo SYS>, <&mo FUNC>;
        };

        // Hold-tap for CTRL - tap = ESC, hold = CTRL
        ht_ctrl: hold_tap_ctrl {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_CTRL";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        // Layer-tap for space - tap = space, hold = layer 1
        lt_space: layer_tap_space {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_SPACE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        // Layer-tap for enter - tap = enter, hold = layer 2
        lt_enter: layer_tap_enter {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_ENTER";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        // SYS layer tap dances for numbers/symbols
        td_1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N1>, <&kp EXCL>;
        };

        td_2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N2>, <&kp AT>;
        };

        td_3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N3>, <&kp HASH>;
        };

        td_4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N4>, <&kp DLLR>;
        };

        td_5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_5";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N5>, <&kp PRCNT>;
        };

        td_6: tap_dance_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_6";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N6>, <&kp CARET>;
        };

        td_7: tap_dance_7 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_7";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N7>, <&kp AMPS>;
        };

        td_8: tap_dance_8 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_8";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N8>, <&kp STAR>;
        };

        td_9: tap_dance_9 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_9";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N9>, <&kp LPAR>;
        };

        td_0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N0>, <&kp RPAR>;
        };

        // Special character tap dances for SYS layer
        td_grave: tap_dance_grave {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_GRAVE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
        };

        td_equal: tap_dance_equal {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_EQUAL";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp EQUAL>, <&kp PLUS>;
        };

        td_minus: tap_dance_minus {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MINUS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp MINUS>, <&kp UNDER>;
        };

        // PLAIN layer X key - x, esc, toggle out of layer
        td_plain_x: tap_dance_plain_x {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_PLAIN_X";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp X>, <&kp ESC>, <&tog PLAIN>;
        };
    };

    macros {
        macro_l: macro_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N9 &kp H &kp N2 &kp I &kp U &kp AMPS &kp N3 &kp B &kp S &kp T &kp J &kp H &kp N3 &kp P>;
            label = "MACRO_L";
        };

        macro_u: macro_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp O &kp O &kp R &kp N4 &kp N0 &kp N4>;
            label = "MACRO_U";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "COLEMAK";
            bindings = <
&kp Q              &kp W &kp F &kp P &kp G                         &kp J               &kp L                &kp U     &kp Y    &kp SEMI
&kp A              &kp R &kp S &kp T &kp D                         &kp H               &kp N                &kp E     &kp I    &kp O
&kp Z              &kp X &kp C &kp V &kp B                         &kp K               &kp M                &kp COMMA &kp DOT  &kp SQT
&ht_ctrl LCTRL ESC                   &td_gui &td_lshift &td_rshift &lt_space SYS SPACE &lt_enter FUNC ENTER &kp LBKT  &kp RBKT &kp FSLH
            >;
        };

        sys_layer {
            label = "SYS";
            bindings = <
&td_1   &td_2  &td_3  &td_4     &td_5                &td_6  &td_7    &td_8    &td_9     &td_0
&trans  &trans &trans &td_grave &td_equal            &trans &kp HOME &kp UP   &kp END   &kp PG_UP
&trans  &trans &trans &trans    &td_minus            &trans &kp LEFT &kp DOWN &kp RIGHT &kp PG_DN
&trans                          &trans &trans &trans &trans &trans   &trans   &kp BSPC  &kp DEL
            >;
        };

        func_layer {
            label = "FUNC";
            bindings = <
&kp F1 &kp F2 &kp F3 &kp F4  &kp F5                           &trans &macro_l &macro_u   &kp C_BRI_UP &kp C_VOL_UP
&kp F6 &kp F7 &kp F8 &kp F9  &kp F10                          &trans &trans   &trans     &kp C_BRI_DN &kp C_VOL_DN
&trans &trans &trans &kp F11 &kp F12                          &trans &trans   &kp C_PREV &kp C_PP     &kp C_NEXT
&trans                       &trans  &bootloader  &bootloader &trans &trans   &trans     &kp PSCRN    &kp C_MUTE
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&tog PLAIN &trans    &mkp MCLK  &trans    &trans               &trans &trans &trans &trans &trans
&trans     &mkp LCLK &mo SCROLL &mkp RCLK &trans               &trans &trans &trans &trans &trans
&trans     &trans    &mo SNIPE  &trans    &trans               &trans &trans &trans &trans &trans
&trans                                    &trans &trans &trans &trans &trans &trans &trans &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans    &trans &trans    &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &mkp LCLK &trans &mkp RCLK &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans &trans    &trans                  &trans  &trans  &trans  &trans  &trans
&trans                             &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans    &trans  &trans   &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &mkp LCLK &trans &mkp RCLK &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans  &trans   &trans                  &trans  &trans  &trans  &trans  &trans
&trans                             &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        plain_layer {
            label = "PLAIN";
            bindings = <
&kp Q       &kp W        &kp F     &kp P     &kp G                &kp J      &kp L      &kp U      &kp Y    &kp SEMI
&kp A       &kp R        &kp S     &kp T     &kp D                &kp H      &kp N      &kp E      &kp I    &kp O
&kp Z       &td_plain_x  &kp C     &kp V     &kp B                &kp K      &kp M      &kp COMMA  &kp DOT  &kp SQT
&kp LCTRL                          &kp LGUI  &kp LSHFT  &kp RSHFT &kp SPACE  &kp ENTER  &kp LBKT   &kp RBKT &kp FSLH
            >;
        };
    };
};
