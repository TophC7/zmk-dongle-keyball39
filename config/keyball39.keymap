#define DEFAULT 0
#define MOUSE   1
#define FUNC    2
#define MISC    3
#define SCROLL  4
#define SNIPE   5

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>

&nice_view_spi { cs-gpios = <&pro_micro 1 GPIO_ACTIVE_HIGH>; };

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        // Tap dances for first row - letter, number, symbol
        td_q: tap_dance_q {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_Q";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp N1>, <&kp EXCL>;
        };

        td_w: tap_dance_w {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_W";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp W>, <&kp N2>, <&kp AT>;
        };

        td_f: tap_dance_f {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_F";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F>, <&kp N3>, <&kp HASH>;
        };

        td_p: tap_dance_p {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_P";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp P>, <&kp N4>, <&kp DLLR>;
        };

        td_g: tap_dance_g {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_G";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp G>, <&kp N5>, <&kp PRCNT>;
        };

        td_j: tap_dance_j {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_J";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp J>, <&kp N6>, <&kp CARET>;
        };

        td_l: tap_dance_l {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_L";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp L>, <&kp N7>, <&kp AMPS>;
        };

        td_u: tap_dance_u {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_U";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp U>, <&kp N8>, <&kp STAR>;
        };

        td_y: tap_dance_y {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_Y";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Y>, <&kp N9>, <&kp LPAR>;
        };

        td_semi: tap_dance_semi {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SEMI";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SEMI>, <&kp N0>, <&kp RPAR>;
        };

        // Tap dances for shift keys - shift, alt, compose
        td_lshift: tap_dance_lshift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LSHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp LALT>, <&kp K_APP>;
        };

        td_rshift: tap_dance_rshift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_RSHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RSHFT>, <&kp RALT>, <&kp K_APP>;
        };

        // Tap dance for enter - enter, layer 2
        td_enter: tap_dance_enter {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_ENTER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ENTER>, <&mo FUNC>;
        };

        // Hold-tap for ctrl - tap = toggle layer 1, hold = ctrl
        ht_ctrl: hold_tap_ctrl {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_CTRL";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&tog>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "COLEMAK";
            bindings = <
&td_q      &td_w         &td_f     &td_p         &td_g                                    &td_j            &td_l  &td_u      &td_y    &td_semi
&kp A      &kp R         &kp S     &kp T         &kp D                                    &kp H            &kp N  &kp E      &kp I    &kp O
&kp Z      &kp X         &kp C     &kp V         &kp B                                    &kp K            &kp M  &kp COMMA  &kp DOT  &kp SQT
&ht_ctrl LCTRL MOUSE  &kp LGUI  &td_lshift  &td_rshift  &lt MOUSE SPACE  &td_enter  &kp LBKT  &kp RBKT  &kp BSLH
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&to DEFAULT  &trans   &trans   &trans   &trans                       &trans    &trans    &trans     &trans     &trans
&trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans                &kp HOME  &kp UP    &kp END    &kp PG_DN  &trans
&tog FUNC  &trans  &trans   &trans   &trans                     &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_UP  &trans
&trans  &kp BSPC  &kp DEL  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        func_layer {
            label = "FUNC";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &kp F5                       &kp C_VOL_UP  &kp C_BRI_UP  &trans  &trans  &trans
&kp F6  &kp F7   &kp F8   &kp F9   &kp F10                      &kp C_VOL_DN  &kp C_BRI_DN  &trans  &trans  &trans
&trans  &trans   &trans   &kp F11  &kp F12                      &kp C_PREV  &kp C_PP  &kp C_NEXT  &trans  &trans
&to DEFAULT  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp C_MUTE
            >;
        };

        misc_layer {
            label = "MISC";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
